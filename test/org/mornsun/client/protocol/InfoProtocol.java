// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InfoProtocol.proto

package org.mornsun.client.protocol;

public final class InfoProtocol {
  private InfoProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface InfoReqPackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 version = 1 [default = 1];
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    int getVersion();

    // optional string uid = 2;
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    boolean hasUid();
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    java.lang.String getUid();
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    // optional string ip = 3;
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // optional string app = 4;
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    boolean hasApp();
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    java.lang.String getApp();
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    com.google.protobuf.ByteString
        getAppBytes();

    // optional string app_ver = 5;
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    boolean hasAppVer();
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    java.lang.String getAppVer();
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    com.google.protobuf.ByteString
        getAppVerBytes();

    // optional string os = 6;
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    boolean hasOs();
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    java.lang.String getOs();
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    com.google.protobuf.ByteString
        getOsBytes();

    // optional string os_ver = 7;
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    boolean hasOsVer();
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    java.lang.String getOsVer();
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    com.google.protobuf.ByteString
        getOsVerBytes();

    // optional string channel = 8;
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    boolean hasChannel();
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    java.lang.String getChannel();
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    com.google.protobuf.ByteString
        getChannelBytes();

    // optional bool loc_switch = 9 [default = false];
    /**
     * <code>optional bool loc_switch = 9 [default = false];</code>
     *
     * <pre>
     * if the user needs the location info
     * </pre>
     */
    boolean hasLocSwitch();
    /**
     * <code>optional bool loc_switch = 9 [default = false];</code>
     *
     * <pre>
     * if the user needs the location info
     * </pre>
     */
    boolean getLocSwitch();

    // optional string isp = 10;
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasIsp();
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getIsp();
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getIspBytes();

    // optional string nation = 11;
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasNation();
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getNation();
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getNationBytes();

    // optional string province = 12;
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasProvince();
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getProvince();
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getProvinceBytes();

    // optional string city = 13;
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasCity();
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getCity();
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getCityBytes();
  }
  /**
   * Protobuf type {@code org.mornsun.client.protocol.InfoReqPack}
   */
  public static final class InfoReqPack extends
      com.google.protobuf.GeneratedMessage
      implements InfoReqPackOrBuilder {
    // Use InfoReqPack.newBuilder() to construct.
    private InfoReqPack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InfoReqPack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InfoReqPack defaultInstance;
    public static InfoReqPack getDefaultInstance() {
      return defaultInstance;
    }

    public InfoReqPack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InfoReqPack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              uid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ip_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              app_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              appVer_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              os_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              osVer_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              channel_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              locSwitch_ = input.readBool();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              isp_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              nation_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              province_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              city_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoReqPack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mornsun.client.protocol.InfoProtocol.InfoReqPack.class, org.mornsun.client.protocol.InfoProtocol.InfoReqPack.Builder.class);
    }

    public static com.google.protobuf.Parser<InfoReqPack> PARSER =
        new com.google.protobuf.AbstractParser<InfoReqPack>() {
      public InfoReqPack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InfoReqPack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InfoReqPack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 version = 1 [default = 1];
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    // optional string uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private java.lang.Object uid_;
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uid = 2;</code>
     *
     * <pre>
     * with any character, not only numeric
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string ip = 3;
    public static final int IP_FIELD_NUMBER = 3;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 3;</code>
     *
     * <pre>
     * client IP, it is determined by the ISP of user's device
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string app = 4;
    public static final int APP_FIELD_NUMBER = 4;
    private java.lang.Object app_;
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    public boolean hasApp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    public java.lang.String getApp() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          app_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string app = 4;</code>
     *
     * <pre>
     * name of the user's APP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAppBytes() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        app_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string app_ver = 5;
    public static final int APP_VER_FIELD_NUMBER = 5;
    private java.lang.Object appVer_;
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    public boolean hasAppVer() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    public java.lang.String getAppVer() {
      java.lang.Object ref = appVer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appVer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string app_ver = 5;</code>
     *
     * <pre>
     * version of the user's APP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAppVerBytes() {
      java.lang.Object ref = appVer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string os = 6;
    public static final int OS_FIELD_NUMBER = 6;
    private java.lang.Object os_;
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    public boolean hasOs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    public java.lang.String getOs() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          os_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string os = 6;</code>
     *
     * <pre>
     * name of the user's operation system, like IOS、android
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOsBytes() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        os_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string os_ver = 7;
    public static final int OS_VER_FIELD_NUMBER = 7;
    private java.lang.Object osVer_;
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    public boolean hasOsVer() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    public java.lang.String getOsVer() {
      java.lang.Object ref = osVer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          osVer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string os_ver = 7;</code>
     *
     * <pre>
     * version of the user's OS
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOsVerBytes() {
      java.lang.Object ref = osVer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        osVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string channel = 8;
    public static final int CHANNEL_FIELD_NUMBER = 8;
    private java.lang.Object channel_;
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    public java.lang.String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          channel_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string channel = 8;</code>
     *
     * <pre>
     * channel of the distributer of publishing the user's APP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool loc_switch = 9 [default = false];
    public static final int LOC_SWITCH_FIELD_NUMBER = 9;
    private boolean locSwitch_;
    /**
     * <code>optional bool loc_switch = 9 [default = false];</code>
     *
     * <pre>
     * if the user needs the location info
     * </pre>
     */
    public boolean hasLocSwitch() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool loc_switch = 9 [default = false];</code>
     *
     * <pre>
     * if the user needs the location info
     * </pre>
     */
    public boolean getLocSwitch() {
      return locSwitch_;
    }

    // optional string isp = 10;
    public static final int ISP_FIELD_NUMBER = 10;
    private java.lang.Object isp_;
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasIsp() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getIsp() {
      java.lang.Object ref = isp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          isp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string isp = 10;</code>
     *
     * <pre>
     * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIspBytes() {
      java.lang.Object ref = isp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        isp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nation = 11;
    public static final int NATION_FIELD_NUMBER = 11;
    private java.lang.Object nation_;
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasNation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getNation() {
      java.lang.Object ref = nation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nation = 11;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNationBytes() {
      java.lang.Object ref = nation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string province = 12;
    public static final int PROVINCE_FIELD_NUMBER = 12;
    private java.lang.Object province_;
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasProvince() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getProvince() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          province_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string province = 12;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProvinceBytes() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        province_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string city = 13;
    public static final int CITY_FIELD_NUMBER = 13;
    private java.lang.Object city_;
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasCity() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          city_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string city = 13;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      version_ = 1;
      uid_ = "";
      ip_ = "";
      app_ = "";
      appVer_ = "";
      os_ = "";
      osVer_ = "";
      channel_ = "";
      locSwitch_ = false;
      isp_ = "";
      nation_ = "";
      province_ = "";
      city_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAppBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getAppVerBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getOsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getOsVerBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getChannelBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, locSwitch_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIspBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getNationBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getProvinceBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getCityBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAppBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAppVerBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getOsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getOsVerBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getChannelBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, locSwitch_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIspBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getNationBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getProvinceBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getCityBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoReqPack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mornsun.client.protocol.InfoProtocol.InfoReqPack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.mornsun.client.protocol.InfoReqPack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mornsun.client.protocol.InfoProtocol.InfoReqPackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoReqPack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.mornsun.client.protocol.InfoProtocol.InfoReqPack.class, org.mornsun.client.protocol.InfoProtocol.InfoReqPack.Builder.class);
      }

      // Construct using org.mornsun.client.protocol.InfoProtocol.InfoReqPack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        app_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        appVer_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        os_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        osVer_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        locSwitch_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        isp_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        nation_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        province_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        city_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor;
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoReqPack getDefaultInstanceForType() {
        return org.mornsun.client.protocol.InfoProtocol.InfoReqPack.getDefaultInstance();
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoReqPack build() {
        org.mornsun.client.protocol.InfoProtocol.InfoReqPack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoReqPack buildPartial() {
        org.mornsun.client.protocol.InfoProtocol.InfoReqPack result = new org.mornsun.client.protocol.InfoProtocol.InfoReqPack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.app_ = app_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.appVer_ = appVer_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.os_ = os_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.osVer_ = osVer_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.locSwitch_ = locSwitch_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isp_ = isp_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nation_ = nation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.province_ = province_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.city_ = city_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mornsun.client.protocol.InfoProtocol.InfoReqPack) {
          return mergeFrom((org.mornsun.client.protocol.InfoProtocol.InfoReqPack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.mornsun.client.protocol.InfoProtocol.InfoReqPack other) {
        if (other == org.mornsun.client.protocol.InfoProtocol.InfoReqPack.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasUid()) {
          bitField0_ |= 0x00000002;
          uid_ = other.uid_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000004;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasApp()) {
          bitField0_ |= 0x00000008;
          app_ = other.app_;
          onChanged();
        }
        if (other.hasAppVer()) {
          bitField0_ |= 0x00000010;
          appVer_ = other.appVer_;
          onChanged();
        }
        if (other.hasOs()) {
          bitField0_ |= 0x00000020;
          os_ = other.os_;
          onChanged();
        }
        if (other.hasOsVer()) {
          bitField0_ |= 0x00000040;
          osVer_ = other.osVer_;
          onChanged();
        }
        if (other.hasChannel()) {
          bitField0_ |= 0x00000080;
          channel_ = other.channel_;
          onChanged();
        }
        if (other.hasLocSwitch()) {
          setLocSwitch(other.getLocSwitch());
        }
        if (other.hasIsp()) {
          bitField0_ |= 0x00000200;
          isp_ = other.isp_;
          onChanged();
        }
        if (other.hasNation()) {
          bitField0_ |= 0x00000400;
          nation_ = other.nation_;
          onChanged();
        }
        if (other.hasProvince()) {
          bitField0_ |= 0x00000800;
          province_ = other.province_;
          onChanged();
        }
        if (other.hasCity()) {
          bitField0_ |= 0x00001000;
          city_ = other.city_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.mornsun.client.protocol.InfoProtocol.InfoReqPack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.mornsun.client.protocol.InfoProtocol.InfoReqPack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 version = 1 [default = 1];
      private int version_ = 1;
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 1;
        onChanged();
        return this;
      }

      // optional string uid = 2;
      private java.lang.Object uid_ = "";
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 2;</code>
       *
       * <pre>
       * with any character, not only numeric
       * </pre>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uid_ = value;
        onChanged();
        return this;
      }

      // optional string ip = 3;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 3;</code>
       *
       * <pre>
       * client IP, it is determined by the ISP of user's device
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ip_ = value;
        onChanged();
        return this;
      }

      // optional string app = 4;
      private java.lang.Object app_ = "";
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public boolean hasApp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public java.lang.String getApp() {
        java.lang.Object ref = app_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          app_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAppBytes() {
        java.lang.Object ref = app_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          app_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public Builder setApp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        app_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public Builder clearApp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        app_ = getDefaultInstance().getApp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string app = 4;</code>
       *
       * <pre>
       * name of the user's APP
       * </pre>
       */
      public Builder setAppBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        app_ = value;
        onChanged();
        return this;
      }

      // optional string app_ver = 5;
      private java.lang.Object appVer_ = "";
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public boolean hasAppVer() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public java.lang.String getAppVer() {
        java.lang.Object ref = appVer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          appVer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAppVerBytes() {
        java.lang.Object ref = appVer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appVer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public Builder setAppVer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        appVer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public Builder clearAppVer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        appVer_ = getDefaultInstance().getAppVer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string app_ver = 5;</code>
       *
       * <pre>
       * version of the user's APP
       * </pre>
       */
      public Builder setAppVerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        appVer_ = value;
        onChanged();
        return this;
      }

      // optional string os = 6;
      private java.lang.Object os_ = "";
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public boolean hasOs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          os_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public Builder setOs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        os_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public Builder clearOs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        os_ = getDefaultInstance().getOs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string os = 6;</code>
       *
       * <pre>
       * name of the user's operation system, like IOS、android
       * </pre>
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        os_ = value;
        onChanged();
        return this;
      }

      // optional string os_ver = 7;
      private java.lang.Object osVer_ = "";
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public boolean hasOsVer() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public java.lang.String getOsVer() {
        java.lang.Object ref = osVer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          osVer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOsVerBytes() {
        java.lang.Object ref = osVer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          osVer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public Builder setOsVer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        osVer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public Builder clearOsVer() {
        bitField0_ = (bitField0_ & ~0x00000040);
        osVer_ = getDefaultInstance().getOsVer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string os_ver = 7;</code>
       *
       * <pre>
       * version of the user's OS
       * </pre>
       */
      public Builder setOsVerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        osVer_ = value;
        onChanged();
        return this;
      }

      // optional string channel = 8;
      private java.lang.Object channel_ = "";
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public java.lang.String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getChannelBytes() {
        java.lang.Object ref = channel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          channel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public Builder setChannel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string channel = 8;</code>
       *
       * <pre>
       * channel of the distributer of publishing the user's APP
       * </pre>
       */
      public Builder setChannelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        channel_ = value;
        onChanged();
        return this;
      }

      // optional bool loc_switch = 9 [default = false];
      private boolean locSwitch_ ;
      /**
       * <code>optional bool loc_switch = 9 [default = false];</code>
       *
       * <pre>
       * if the user needs the location info
       * </pre>
       */
      public boolean hasLocSwitch() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool loc_switch = 9 [default = false];</code>
       *
       * <pre>
       * if the user needs the location info
       * </pre>
       */
      public boolean getLocSwitch() {
        return locSwitch_;
      }
      /**
       * <code>optional bool loc_switch = 9 [default = false];</code>
       *
       * <pre>
       * if the user needs the location info
       * </pre>
       */
      public Builder setLocSwitch(boolean value) {
        bitField0_ |= 0x00000100;
        locSwitch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool loc_switch = 9 [default = false];</code>
       *
       * <pre>
       * if the user needs the location info
       * </pre>
       */
      public Builder clearLocSwitch() {
        bitField0_ = (bitField0_ & ~0x00000100);
        locSwitch_ = false;
        onChanged();
        return this;
      }

      // optional string isp = 10;
      private java.lang.Object isp_ = "";
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasIsp() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getIsp() {
        java.lang.Object ref = isp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          isp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIspBytes() {
        java.lang.Object ref = isp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          isp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setIsp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        isp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearIsp() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isp_ = getDefaultInstance().getIsp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string isp = 10;</code>
       *
       * <pre>
       * location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setIspBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        isp_ = value;
        onChanged();
        return this;
      }

      // optional string nation = 11;
      private java.lang.Object nation_ = "";
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasNation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getNation() {
        java.lang.Object ref = nation_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNationBytes() {
        java.lang.Object ref = nation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setNation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        nation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearNation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nation_ = getDefaultInstance().getNation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nation = 11;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setNationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        nation_ = value;
        onChanged();
        return this;
      }

      // optional string province = 12;
      private java.lang.Object province_ = "";
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasProvince() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getProvince() {
        java.lang.Object ref = province_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          province_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProvinceBytes() {
        java.lang.Object ref = province_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          province_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setProvince(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        province_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearProvince() {
        bitField0_ = (bitField0_ & ~0x00000800);
        province_ = getDefaultInstance().getProvince();
        onChanged();
        return this;
      }
      /**
       * <code>optional string province = 12;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setProvinceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        province_ = value;
        onChanged();
        return this;
      }

      // optional string city = 13;
      private java.lang.Object city_ = "";
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasCity() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearCity() {
        bitField0_ = (bitField0_ & ~0x00001000);
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>optional string city = 13;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        city_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.mornsun.client.protocol.InfoReqPack)
    }

    static {
      defaultInstance = new InfoReqPack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.mornsun.client.protocol.InfoReqPack)
  }

  public interface InfoResPackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 version = 1 [default = 1];
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    int getVersion();

    // repeated uint32 sids = 2;
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    java.util.List<java.lang.Integer> getSidsList();
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    int getSidsCount();
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    int getSids(int index);

    // optional string isp = 9;
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasIsp();
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getIsp();
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getIspBytes();

    // optional string nation = 10;
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasNation();
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getNation();
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getNationBytes();

    // optional string province = 11;
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasProvince();
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getProvince();
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getProvinceBytes();

    // optional string city = 12;
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    boolean hasCity();
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    java.lang.String getCity();
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    com.google.protobuf.ByteString
        getCityBytes();
  }
  /**
   * Protobuf type {@code org.mornsun.client.protocol.InfoResPack}
   */
  public static final class InfoResPack extends
      com.google.protobuf.GeneratedMessage
      implements InfoResPackOrBuilder {
    // Use InfoResPack.newBuilder() to construct.
    private InfoResPack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private InfoResPack(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final InfoResPack defaultInstance;
    public static InfoResPack getDefaultInstance() {
      return defaultInstance;
    }

    public InfoResPack getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private InfoResPack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              version_ = input.readUInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sids_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              sids_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                sids_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                sids_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              bitField0_ |= 0x00000002;
              isp_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000004;
              nation_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000008;
              province_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000010;
              city_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sids_ = java.util.Collections.unmodifiableList(sids_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoResPack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoResPack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.mornsun.client.protocol.InfoProtocol.InfoResPack.class, org.mornsun.client.protocol.InfoProtocol.InfoResPack.Builder.class);
    }

    public static com.google.protobuf.Parser<InfoResPack> PARSER =
        new com.google.protobuf.AbstractParser<InfoResPack>() {
      public InfoResPack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InfoResPack(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<InfoResPack> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 version = 1 [default = 1];
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 version = 1 [default = 1];</code>
     *
     * <pre>
     * version of this protocol
     * </pre>
     */
    public int getVersion() {
      return version_;
    }

    // repeated uint32 sids = 2;
    public static final int SIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> sids_;
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSidsList() {
      return sids_;
    }
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    public int getSidsCount() {
      return sids_.size();
    }
    /**
     * <code>repeated uint32 sids = 2;</code>
     *
     * <pre>
     * sampling ID list, sample results for an user's context
     * </pre>
     */
    public int getSids(int index) {
      return sids_.get(index);
    }

    // optional string isp = 9;
    public static final int ISP_FIELD_NUMBER = 9;
    private java.lang.Object isp_;
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasIsp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getIsp() {
      java.lang.Object ref = isp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          isp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string isp = 9;</code>
     *
     * <pre>
     *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIspBytes() {
      java.lang.Object ref = isp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        isp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string nation = 10;
    public static final int NATION_FIELD_NUMBER = 10;
    private java.lang.Object nation_;
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasNation() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getNation() {
      java.lang.Object ref = nation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nation = 10;</code>
     *
     * <pre>
     * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNationBytes() {
      java.lang.Object ref = nation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string province = 11;
    public static final int PROVINCE_FIELD_NUMBER = 11;
    private java.lang.Object province_;
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasProvince() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getProvince() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          province_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string province = 11;</code>
     *
     * <pre>
     * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getProvinceBytes() {
      java.lang.Object ref = province_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        province_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string city = 12;
    public static final int CITY_FIELD_NUMBER = 12;
    private java.lang.Object city_;
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public boolean hasCity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public java.lang.String getCity() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          city_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string city = 12;</code>
     *
     * <pre>
     * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCityBytes() {
      java.lang.Object ref = city_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        city_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      version_ = 1;
      sids_ = java.util.Collections.emptyList();
      isp_ = "";
      nation_ = "";
      province_ = "";
      city_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, version_);
      }
      for (int i = 0; i < sids_.size(); i++) {
        output.writeUInt32(2, sids_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(9, getIspBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(10, getNationBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(11, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(12, getCityBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, version_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(sids_.get(i));
        }
        size += dataSize;
        size += 1 * getSidsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getIspBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getNationBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getProvinceBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getCityBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.mornsun.client.protocol.InfoProtocol.InfoResPack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mornsun.client.protocol.InfoProtocol.InfoResPack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.mornsun.client.protocol.InfoResPack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.mornsun.client.protocol.InfoProtocol.InfoResPackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoResPack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoResPack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.mornsun.client.protocol.InfoProtocol.InfoResPack.class, org.mornsun.client.protocol.InfoProtocol.InfoResPack.Builder.class);
      }

      // Construct using org.mornsun.client.protocol.InfoProtocol.InfoResPack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        sids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        isp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        nation_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        province_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        city_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.mornsun.client.protocol.InfoProtocol.internal_static_org_mornsun_client_protocol_InfoResPack_descriptor;
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoResPack getDefaultInstanceForType() {
        return org.mornsun.client.protocol.InfoProtocol.InfoResPack.getDefaultInstance();
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoResPack build() {
        org.mornsun.client.protocol.InfoProtocol.InfoResPack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.mornsun.client.protocol.InfoProtocol.InfoResPack buildPartial() {
        org.mornsun.client.protocol.InfoProtocol.InfoResPack result = new org.mornsun.client.protocol.InfoProtocol.InfoResPack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          sids_ = java.util.Collections.unmodifiableList(sids_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.sids_ = sids_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isp_ = isp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nation_ = nation_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.province_ = province_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.city_ = city_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.mornsun.client.protocol.InfoProtocol.InfoResPack) {
          return mergeFrom((org.mornsun.client.protocol.InfoProtocol.InfoResPack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.mornsun.client.protocol.InfoProtocol.InfoResPack other) {
        if (other == org.mornsun.client.protocol.InfoProtocol.InfoResPack.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.sids_.isEmpty()) {
          if (sids_.isEmpty()) {
            sids_ = other.sids_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSidsIsMutable();
            sids_.addAll(other.sids_);
          }
          onChanged();
        }
        if (other.hasIsp()) {
          bitField0_ |= 0x00000004;
          isp_ = other.isp_;
          onChanged();
        }
        if (other.hasNation()) {
          bitField0_ |= 0x00000008;
          nation_ = other.nation_;
          onChanged();
        }
        if (other.hasProvince()) {
          bitField0_ |= 0x00000010;
          province_ = other.province_;
          onChanged();
        }
        if (other.hasCity()) {
          bitField0_ |= 0x00000020;
          city_ = other.city_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.mornsun.client.protocol.InfoProtocol.InfoResPack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.mornsun.client.protocol.InfoProtocol.InfoResPack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 version = 1 [default = 1];
      private int version_ = 1;
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public int getVersion() {
        return version_;
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public Builder setVersion(int value) {
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version = 1 [default = 1];</code>
       *
       * <pre>
       * version of this protocol
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = 1;
        onChanged();
        return this;
      }

      // repeated uint32 sids = 2;
      private java.util.List<java.lang.Integer> sids_ = java.util.Collections.emptyList();
      private void ensureSidsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sids_ = new java.util.ArrayList<java.lang.Integer>(sids_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSidsList() {
        return java.util.Collections.unmodifiableList(sids_);
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public int getSidsCount() {
        return sids_.size();
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public int getSids(int index) {
        return sids_.get(index);
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public Builder setSids(
          int index, int value) {
        ensureSidsIsMutable();
        sids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public Builder addSids(int value) {
        ensureSidsIsMutable();
        sids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public Builder addAllSids(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSidsIsMutable();
        super.addAll(values, sids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 sids = 2;</code>
       *
       * <pre>
       * sampling ID list, sample results for an user's context
       * </pre>
       */
      public Builder clearSids() {
        sids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional string isp = 9;
      private java.lang.Object isp_ = "";
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasIsp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getIsp() {
        java.lang.Object ref = isp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          isp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIspBytes() {
        java.lang.Object ref = isp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          isp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setIsp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        isp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearIsp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isp_ = getDefaultInstance().getIsp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string isp = 9;</code>
       *
       * <pre>
       *  location info: name of the ISP, if it is denoted and loc_switch is open, the ISP result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setIspBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        isp_ = value;
        onChanged();
        return this;
      }

      // optional string nation = 10;
      private java.lang.Object nation_ = "";
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasNation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getNation() {
        java.lang.Object ref = nation_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNationBytes() {
        java.lang.Object ref = nation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setNation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearNation() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nation_ = getDefaultInstance().getNation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nation = 10;</code>
       *
       * <pre>
       * location info: nation of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setNationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        nation_ = value;
        onChanged();
        return this;
      }

      // optional string province = 11;
      private java.lang.Object province_ = "";
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasProvince() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getProvince() {
        java.lang.Object ref = province_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          province_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getProvinceBytes() {
        java.lang.Object ref = province_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          province_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setProvince(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        province_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearProvince() {
        bitField0_ = (bitField0_ & ~0x00000010);
        province_ = getDefaultInstance().getProvince();
        onChanged();
        return this;
      }
      /**
       * <code>optional string province = 11;</code>
       *
       * <pre>
       * location info: province of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setProvinceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        province_ = value;
        onChanged();
        return this;
      }

      // optional string city = 12;
      private java.lang.Object city_ = "";
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public boolean hasCity() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public java.lang.String getCity() {
        java.lang.Object ref = city_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          city_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCityBytes() {
        java.lang.Object ref = city_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          city_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setCity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        city_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder clearCity() {
        bitField0_ = (bitField0_ & ~0x00000020);
        city_ = getDefaultInstance().getCity();
        onChanged();
        return this;
      }
      /**
       * <code>optional string city = 12;</code>
       *
       * <pre>
       * location info: city of the user's geographic location, , if one of these three scale locations is denoted and loc_switch is open, the location result interpreted by server-end will be ignored
       * </pre>
       */
      public Builder setCityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        city_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.mornsun.client.protocol.InfoResPack)
    }

    static {
      defaultInstance = new InfoResPack(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.mornsun.client.protocol.InfoResPack)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mornsun_client_protocol_InfoReqPack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_mornsun_client_protocol_InfoResPack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_mornsun_client_protocol_InfoResPack_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022InfoProtocol.proto\022\021org.mornsun.client.protocol\"" +
      "\335\001\n\013InfoReqPack\022\022\n\007version\030\001 \001(\r:\0011\022\013\n\003u" +
      "id\030\002 \001(\t\022\n\n\002ip\030\003 \001(\t\022\013\n\003app\030\004 \001(\t\022\017\n\007app" +
      "_ver\030\005 \001(\t\022\n\n\002os\030\006 \001(\t\022\016\n\006os_ver\030\007 \001(\t\022\017" +
      "\n\007channel\030\010 \001(\t\022\031\n\nloc_switch\030\t \001(\010:\005fal" +
      "se\022\013\n\003isp\030\n \001(\t\022\016\n\006nation\030\013 \001(\t\022\020\n\010provi" +
      "nce\030\014 \001(\t\022\014\n\004city\030\r \001(\t\"l\n\013InfoResPack\022\022" +
      "\n\007version\030\001 \001(\r:\0011\022\014\n\004sids\030\002 \003(\r\022\013\n\003isp\030" +
      "\t \001(\t\022\016\n\006nation\030\n \001(\t\022\020\n\010province\030\013 \001(\t\022" +
      "\014\n\004city\030\014 \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_mornsun_client_protocol_InfoReqPack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mornsun_client_protocol_InfoReqPack_descriptor,
              new java.lang.String[] { "Version", "Uid", "Ip", "App", "AppVer", "Os", "OsVer", "Channel", "LocSwitch", "Isp", "Nation", "Province", "City", });
          internal_static_org_mornsun_client_protocol_InfoResPack_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_mornsun_client_protocol_InfoResPack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_mornsun_client_protocol_InfoResPack_descriptor,
              new java.lang.String[] { "Version", "Sids", "Isp", "Nation", "Province", "City", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
